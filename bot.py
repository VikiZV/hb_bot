import telebot
import requests
from datetime import datetime
from config import TOKEN_TG, OPENROUTER_API_KEY
from db import DB

"""–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
db = DB(
    host='server102.hosting.reg.ru', user='u1450880_evg',
    password='aD6nK7hV7obJ4vB9', database='u1450880_evg'
    )

db.connect()

"""–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞"""
bot = telebot.TeleBot(TOKEN_TG)
ADMIN_ID = 836398223


def check_birthdays():
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è.
    1. –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É.
    2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è (–∏–≥–Ω–æ—Ä–∏—Ä—É—è –≥–æ–¥).
    3. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ OpenRouter API.
    4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –≤ Telegram.
    """
    today = datetime.today().strftime("%Y-%m-%d")
    try:
        with db.connection.cursor() as cursor:
            cursor.execute("SELECT name FROM hb WHERE date_birth LIKE %s", (f"%{today[5:]}%",))
            result = cursor.fetchall()
            for row in result:
                name = row[0]

            response = requests.post(
                url="https://openrouter.ai/api/v1/chat/completions",
                headers={
                    "Authorization": f"Bearer {OPENROUTER_API_KEY}",
                    "Content-Type": "application/json",
                },
                json={
                    "model": "deepseek/deepseek-r1-0528:free",
                    "messages": [
                        {
                            "role": "user",
                            "content": f"–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è –¥–ª—è {name}. –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, –±–µ–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –Ω–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–æ–π –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏, —Ç–æ–ª—å–∫–æ —Å–∞–º —Ç–µ–∫—Å—Ç."
                        }
                    ],
                }
            )
            if response.status_code == 200:
                text = response.json()["choices"][0]["message"][
                    "content"]
                bot.send_message(ADMIN_ID,
                                 f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º {name}!\n\n{text}")
            else:
                print("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è:", response.text)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è: {e}")


check_birthdays()

# –ß—Ç–æ–±—ã –±–æ—Ç –æ—Ç–≤–µ—á–∞–ª –∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–∂–µ
@bot.message_handler(commands=['start'])
def start_handler(message):
    """
    –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    """
    bot.reply_to(message, "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! üéÇ")


bot.polling()


